#!/usr/bin/env node
var route, routeName, domain, routeParts, path, routeId,
	query, engine, debug, argv, cmd, root;

function displayUsage() {
	console.log(
		'Usage: nest [command] [routeID] ([query])\n\n'+
		'Available commands: \nscrape \nlist \ntest \nwork \n\n'+
		'Hint: try `nest scrape imdb`\n');
}

path = require('path');
debug = require('debug');

argv = process.argv;

if ( argv.length < 3 ) {
	displayUsage();
	process.exit(0);
}

root   = path.normalize( path.join(__dirname, '..') );

cmd     = argv[2];
routeId = argv[3];
query   = argv[4];


// Get the route domain and name
if ( routeId ) {
	routeParts = routeId.split(':');
	domain = routeParts[0];
	routeName = routeParts[1] ? routeParts[1] : 'init';
}


switch (cmd) {

	case 'scrape':

		if ( argv.length === 3 ) {
			route = require(root+'/routes');
			console.log('Please, specify the route ID to scrape.');
			console.log('\nAvailable routes:\n'+route.list());
			process.exit(0);
		}

		// enable Worker messages
		debug.enable('Worker');
		debug.enable('Agent*');
		debug.enable('Item*');

		try {
			route = require(root+'/routes/'+domain+'/'+routeName);

		} catch(err) {
			if ( err.code === 'MODULE_NOT_FOUND' ) {

				console.error( routeName === 'init' ? 
					'No init script for '+domain+'.' :
					'Route '+argv[3]+' not found.');

				process.exit(1);

			} else {
				throw err;
			}
		}

		// start the route. init scripts may not export a route to start.
		route.start(query);

		break;

	case 'test':
		if ( routeId ) {
			if ( routeName === 'init' ) {
				process.env.TEST_DOMAIN = domain;
			} else {
				process.env.TEST_ROUTE = routeId;
			}

			process.argv[2] = root+'/test/routes.test';
			process.argv.splice(3, 1);
		}
		require(root+'/node_modules/mocha/bin/_mocha');
		break;

	case 'list':
		route = require(root+'/routes');
		console.log( route.list() );
		process.exit(0);
		break;

	case 'work':

		// enable Worker messages
		debug.enable('Worker');
		debug.enable('Agent*');
		debug.enable('Item*');

		// start the engine
		engine = require(root+'/lib/engine');
		engine.start();

		break;

	default:
		console.log('Unknown command '+cmd);
		displayUsage();
		process.exit(0);
}
